/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

/**
 *
 * @author SHIRLEY
 */
public class Form_Movimientos extends javax.swing.JPanel {

    /**
     * Creates new form jpanel_Movimientos
     */
    public Form_Movimientos() {
        initComponents();
        setCamposHabilitados(false);
        configurarCombos();
        cargarMovimientosEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbTipoMovimiento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbMotivo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtOrigen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtUbicacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtReferencias = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtObservaciones = new javax.swing.JTextField();
        lbl_ingresarDNI = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JTextField();
        btn_nuevo = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_usuario = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(1137, 603));

        jLabel9.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Movimientos de Inventario");

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tipo de movimiento:");

        cmbTipoMovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cantidad:");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Producto:");

        cmbProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Motivo:");

        cmbMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Origen de ubicación:");

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ubicación destino:");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Referencias:");

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Observaciones:");

        lbl_ingresarDNI.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        lbl_ingresarDNI.setForeground(new java.awt.Color(255, 255, 255));
        lbl_ingresarDNI.setText("Buscar movimiento :");

        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(25, 25, 25));
        btn_nuevo.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btn_nuevo.setForeground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Nuevo1.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        btn_guardar.setBackground(new java.awt.Color(25, 25, 25));
        btn_guardar.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btn_guardar.setForeground(new java.awt.Color(255, 255, 255));
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_eliminar.setBackground(new java.awt.Color(25, 25, 25));
        btn_eliminar.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btn_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        tbl_usuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_usuario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(345, 345, 345))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_nuevo)
                        .addGap(49, 49, 49)
                        .addComponent(btn_guardar)
                        .addGap(53, 53, 53)
                        .addComponent(btn_eliminar))
                    .addComponent(lbl_ingresarDNI)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(12, 12, 12)
                        .addComponent(cmbTipoMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbProducto, 0, 267, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_buscar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtReferencias, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbTipoMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtReferencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_ingresarDNI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_nuevo)
                    .addComponent(btn_guardar)
                    .addComponent(btn_eliminar))
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Método para habilitar/deshabilitar campos
    private void setCamposHabilitados(boolean habilitado) {
        cmbTipoMovimiento.setEnabled(habilitado);
        txtCantidad.setEnabled(habilitado);
        cmbProducto.setEnabled(habilitado);
        cmbMotivo.setEnabled(habilitado);
        txtOrigen.setEnabled(habilitado);
        txtUbicacion.setEnabled(habilitado);
        txtReferencias.setEnabled(habilitado);
        txtObservaciones.setEnabled(habilitado);
    }

    // Configurar los combos de productos y motivos
    private void configurarCombos() {
        cmbProducto.removeAllItems();
        cmbProducto.addItem("Laptop Lenovo");
        cmbProducto.addItem("Mouse Logitech");
        cmbProducto.addItem("Teclado Mecánico HyperX");
        cmbProducto.addItem("Monitor Samsung 24");
        cmbProducto.addItem("Disco SSD Kingston 480GB");
        cmbProducto.addItem("Impresora Epson EcoTank");
        cmbProducto.addItem("Router TP-Link Archer");
        cmbProducto.addItem("Tablet Samsung Galaxy Tab A7");
        cmbProducto.addItem("Silla Gamer Cougar");
        cmbProducto.addItem("UPS APC 1200VA");
        cmbMotivo.removeAllItems();
        cmbMotivo.addItem("Venta");
        cmbMotivo.addItem("Compra");
        cmbTipoMovimiento.removeAllItems();
        cmbTipoMovimiento.addItem("Entrada");
        cmbTipoMovimiento.addItem("Salida");
    }

    // Limpiar los campos
    private void limpiarCampos() {
        cmbTipoMovimiento.setSelectedIndex(-1);
        txtCantidad.setText("");
        cmbProducto.setSelectedIndex(-1);
        cmbMotivo.setSelectedIndex(-1);
        txtOrigen.setText("");
        txtUbicacion.setText("");
        txtReferencias.setText("");
        txtObservaciones.setText("");
    }

    // Cargar movimientos en la tabla
    private void cargarMovimientosEnTabla() {
        try {
            javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{"ID", "Tipo", "Cantidad", "Producto", "Motivo", "Origen", "Ubicación", "Referencia", "Observaciones"}
            );
            DAO.MovimientoInventarioDAO movDAO = DAO.DAOFactory.getMovimientoInventarioDAO();
            java.util.List<Modelo.MovimientoInventario> movimientos = movDAO.findAll();
            for (Modelo.MovimientoInventario m : movimientos) {
                String productoNombre = (m.getStock() != null && m.getStock().getProducto() != null) ? m.getStock().getProducto().getNombre() : "";
                String ubicacionNombre = (m.getUbicacionFisica() != null) ? m.getUbicacionFisica().getMiUbicacionFisica() : "";
                modelo.addRow(new Object[]{
                    m.getMovimientoId(),
                    m.getTipo(),
                    m.getCantidad(),
                    productoNombre,
                    m.getMotivo(),
                    m.getUbicacionProveedor(),
                    ubicacionNombre,
                    m.getReferencia(),
                    m.getObservaciones()
                });
            }
            tbl_usuario.setModel(modelo);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar movimientos: " + e.getMessage());
        }
    }

    // Buscar movimiento por referencia
    private void buscarMovimientoPorReferencia(String referencia) {
        try {
            javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{"ID", "Tipo", "Cantidad", "Producto", "Motivo", "Origen", "Ubicación", "Referencia", "Observaciones"}
            );
            DAO.MovimientoInventarioDAO movDAO = DAO.DAOFactory.getMovimientoInventarioDAO();
            java.util.List<Modelo.MovimientoInventario> movimientos = movDAO.findAll();
            for (Modelo.MovimientoInventario m : movimientos) {
                if (m.getReferencia() != null && m.getReferencia().equalsIgnoreCase(referencia)) {
                    String productoNombre = (m.getStock() != null && m.getStock().getProducto() != null) ? m.getStock().getProducto().getNombre() : "";
                    String ubicacionNombre = (m.getUbicacionFisica() != null) ? m.getUbicacionFisica().getMiUbicacionFisica() : "";
                    modelo.addRow(new Object[]{
                        m.getMovimientoId(),
                        m.getTipo(),
                        m.getCantidad(),
                        productoNombre,
                        m.getMotivo(),
                        m.getUbicacionProveedor(),
                        ubicacionNombre,
                        m.getReferencia(),
                        m.getObservaciones()
                    });
                }
            }
            tbl_usuario.setModel(modelo);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al buscar movimiento: " + e.getMessage());
        }
    }

    // Evento btn_nuevo
    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {
        setCamposHabilitados(true);
        limpiarCampos();
    }

    // Evento btn_guardar
    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Modelo.MovimientoInventario mov = new Modelo.MovimientoInventario();
            mov.setTipo((String) cmbTipoMovimiento.getSelectedItem());
            mov.setCantidad(Integer.parseInt(txtCantidad.getText()));
            // Buscar el objeto Stock por nombre de producto
            String nombreProducto = (String) cmbProducto.getSelectedItem();
            DAO.StockDAO stockDAO = DAO.DAOFactory.getStockDAO();
            Modelo.Stock stock = stockDAO.findByProductoNombre(nombreProducto);
            mov.setStock(stock);
            mov.setMotivo((String) cmbMotivo.getSelectedItem());
            mov.setUbicacionProveedor(txtOrigen.getText());
            // Buscar el objeto UbicacionFisica por nombre
            String nombreUbicacion = txtUbicacion.getText();
            DAO.UbicacionFisicaDAO ubiDAO = DAO.DAOFactory.getUbicacionFisicaDAO();
            Modelo.UbicacionFisica ubicacion = ubiDAO.findByNombre(nombreUbicacion);
            mov.setUbicacionFisica(ubicacion);
            mov.setReferencia(txtReferencias.getText());
            mov.setObservaciones(txtObservaciones.getText());
            DAO.MovimientoInventarioDAO movDAO = DAO.DAOFactory.getMovimientoInventarioDAO();
            movDAO.create(mov);
            javax.swing.JOptionPane.showMessageDialog(this, "Movimiento guardado correctamente");
            setCamposHabilitados(false);
            limpiarCampos();
            cargarMovimientosEnTabla();
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar movimiento: " + e.getMessage());
        }
    }

    // Evento btn_eliminar
    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {
        int fila = tbl_usuario.getSelectedRow();
        if (fila >= 0) {
            Long id = (Long) tbl_usuario.getValueAt(fila, 0);
            try {
                DAO.MovimientoInventarioDAO movDAO = DAO.DAOFactory.getMovimientoInventarioDAO();
                movDAO.delete(id);
                javax.swing.JOptionPane.showMessageDialog(this, "Movimiento eliminado correctamente");
                cargarMovimientosEnTabla();
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error al eliminar movimiento: " + e.getMessage());
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un movimiento para eliminar");
        }
    }

    // Evento buscar por referencia
    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {
        String ref = txt_buscar.getText();
        if (!ref.trim().isEmpty()) {
            buscarMovimientoPorReferencia(ref);
        } else {
            cargarMovimientosEnTabla();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JComboBox<String> cmbMotivo;
    private javax.swing.JComboBox<String> cmbProducto;
    private javax.swing.JComboBox<String> cmbTipoMovimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_ingresarDNI;
    private javax.swing.JTable tbl_usuario;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtOrigen;
    private javax.swing.JTextField txtReferencias;
    private javax.swing.JTextField txtUbicacion;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
