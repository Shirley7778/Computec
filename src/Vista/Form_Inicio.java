/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import ConexionBD.Conexion;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import Controlador.AuthController;
import Modelo.Usuario;
import Servicio.PedidoServicio;
import Modelo.Pedido;
import java.util.List;
import java.math.BigDecimal;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author JENS07
 */
public class Form_Inicio extends javax.swing.JPanel {

    DefaultTableModel modelo;
    Conexion conn = new Conexion();
    private PedidoServicio pedidoServicio;

    public Form_Inicio() {
        initComponents();
        pedidoServicio = new PedidoServicio();
        lbl_fecha.setText(fecha()); //establecer la fecha 
        iniciarHora();//llamar al metodo para actualizar la hora 
        mostrarInformacionDelDia();
        
        // Mostrar información del usuario actual si está autenticado
        try {
            Modelo.Usuario usuario = Controlador.AuthController.getUsuarioActual();
            if (usuario != null) {
                lbl_bienvenido.setText("Bienvenido " + usuario.getNombre() + " " + usuario.getApellido());
            }
        } catch (Exception e) {
            // Si no hay usuario autenticado, mantener el mensaje por defecto
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Inicio = new javax.swing.JTable();
        lbl_bienvenido = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_hora = new javax.swing.JLabel();
        lbl_fecha = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(1121, 565));

        lbl_titulo.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 24)); // NOI18N
        lbl_titulo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_titulo.setText("Panel Inicio");

        tbl_Inicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_Inicio);

        lbl_bienvenido.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        lbl_bienvenido.setForeground(new java.awt.Color(255, 255, 255));
        lbl_bienvenido.setText("Bienvenido ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Reloj.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/calendario.png"))); // NOI18N

        lbl_hora.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        lbl_hora.setForeground(new java.awt.Color(255, 255, 255));
        lbl_hora.setText("HH:MM:SS");

        lbl_fecha.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        lbl_fecha.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fecha.setText("DD/MM/YYYY");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ventas realizadas del dia ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(lbl_titulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_bienvenido, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 599, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_hora)
                            .addComponent(lbl_fecha))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_titulo)
                        .addGap(59, 59, 59)
                        .addComponent(lbl_bienvenido))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_hora)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_fecha))
                    .addComponent(jLabel5))
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_bienvenido;
    private javax.swing.JLabel lbl_fecha;
    private javax.swing.JLabel lbl_hora;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTable tbl_Inicio;
    // End of variables declaration//GEN-END:variables

    //METODO PARA LA FECHA
    public static String fecha() {
        Date fecha = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/YYYY");
        return formato.format(fecha);

    }

    //METODO PARA OBTENER LA HORA 
    public static String hora() {
        Date fecha = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("HH:mm:ss");
        return formato.format(fecha);
    }

    //METODO PARA INICAR EL TIMER QUE ACTUALIZA LA HORA CADA SEGUNDO
    private void iniciarHora() {
        //crear un timer que actualice la hora cada segundo(1000 ms)
        Timer timer = new Timer(1000, e -> {
            //actualizar el texto de jlabel de la hora
            lbl_hora.setText(hora());
        });
        timer.start();//iniciar timer
    }

    //----------------------------------------------------
    //-------------------------------    
    //METODO PARA MOSTRAR PEDIDOS CANCELADOS EN LA TABLA
    //-------------------------------
    void mostrarInformacionDelDia() {
        try {
            // Configurar tabla para mostrar solo pedidos cancelados
            String[] titulos = {"ID Pedido", "Cliente", "Fecha", "Total", "Estado"};
            modelo = new DefaultTableModel(null, titulos);
            tbl_Inicio.setModel(modelo);
            
            // Obtener solo los pedidos cancelados del día
            List<Pedido> pedidosCancelados = pedidoServicio.obtenerPedidosCanceladosDelDia();
            
            // Formato para la fecha
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
            
            // Llenar la tabla con los pedidos cancelados
            for (Pedido pedido : pedidosCancelados) {
                Object[] fila = new Object[5];
                fila[0] = pedido.getIdPedido();
                fila[1] = pedido.getCliente().getNombreEmpresa() != null ? 
                         pedido.getCliente().getNombreEmpresa() : 
                         pedido.getCliente().getRucDni();
                fila[2] = pedido.getFecha().format(formatter);
                fila[3] = "S/. " + pedido.getTotal().toString();
                fila[4] = pedido.getEstado();
                
                modelo.addRow(fila);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los pedidos cancelados: " + e.getMessage());
            System.out.println("Error al cargar los pedidos cancelados: " + e.getMessage());
        }
    }
    
    //----------------------------------------------------
    //-------------------------------    
    //METODO PARA REFRESCAR LA INFORMACIÓN DEL DÍA
    //-------------------------------
    public void refrescarInformacion() {
        mostrarInformacionDelDia();
    }
}
